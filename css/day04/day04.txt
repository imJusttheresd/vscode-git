
-----------------------------------------------------------------------------------------------

 패딩, 마진(padding, margin)

 패딩: 안쪽 여백
 마진: 바깥 여백 

 * HTML 요소는 박스 모델

 ex)

    padding(margin): 위 / 오 / 아 / 왼 (8px 0 0 8px); -> 시게방향
                     위 / 오왼 / 아 (8px 0 8px)
                     위아 / 오왼 (0 8px)
                     모두 (8px)

    padding(margin)-top(right, bottom, left): (-)8px;


-----------------------------------------------------------------------------------------------

 박스 사이징
    요소의 크기를 어떤 것을 기준을 계산하는가

    content-box : 콘텐트(내용물) 기준으로 크기를 정합니다.
    border-box : 테두리(기준) 기준으로 크기를 정합니다.

-----------------------------------------------------------------------------------------------

 테두리

    1. border
        border - width (굵기)
        border - style (종류)
        border - color (색상)

        border : 1px solid #000;
        border-top(left,rgiht,bottm): 1px solid #000;

        종류
            * none ---> input, textarea와 같이 border 기본적으로 존재하는 태그들의 테두리 사용하지 않을 때
            dotted --> 둥근점 선
            dashed --> 사각점 선
            * solid ---> 직선
            double --> 이중선
    

    2. border-radius
        - 요소 테두리의 경계의 꼭짓점을 둥글게 만듭니다.

        border-radius: topleftx, toprightx, botrightx, botleftx / toplefty, toprighty, botrighty, botlefty
                     : 8px 6px 3px 6px / 8px 3px 6px 8px;

                     : 16px; (네 꼭짓점을 모두)
                     : 16px 0px 0px 16px (topleft, topright, botright, botleft)
                     : 50% (완전 원)
                     : 4px / 16px;


    3. table

        border-collapse: collapse;

        표 테두리가 분리 또는 상쇄될 지를 정하는 속성
        상쇄 되면 맞닿은 테두리는 하나로 합쳐짐

 -----------------------------------------------------------------------------------------------


  * display


    none: 보이지 않는 상태 화면에 자리도 차지 않고 있음

    inline : 크기가 안에 있는 내용물 만큼만 커짐, 높이와 길이 줄 수 없음
            블록과 달리 한 줄을 차지 않고, 이웃하는 태그와 나란히
            (a, span... )

    
    block : 크기를 원하는 크기로 지정이 가능, 블록 속성이기 때문에 한 줄을 차지(width: 100%)
            따라서 이웃하는 태그가 상하에 배치
            (p, h1~6, div, table, header, footer ... )

    inline-block : inline과 block의 속성을 모두 갖고 있는 것
                   => 이웃하는 요소와 나란히, 크기 지정 가능

    flex

 -----------------------------------------------------------------------------------------------

    * 부가적인 속성

            visibility: visble/hidden (웹 페이지에 자리는 차지 하고 있지만 보이지 않는 상태)
            float: left, right (좌우정렬, clear)


 -----------------------------------------------------------------------------------------------

  * flexible layout

    flex: 
        대부분의 웹사이트 수직으로 구성
        레이아웃 구성 시 사용되는 대부분의 태그는 블록태그이기 때문에
        수직 구성은 쉽게 가능

        그러나 수평 구성은 구현하기가 쉽지 않습니다.
        또한 컨텐츠 내에서 수직,수평정렬(중앙 정렬) 또한 쉽지 않습니다.

        이러한 문제를 해결하기 위해서 유연하게("flexible") 빈 공간을 채우거나
        자식을 어떠한 방향으로 배치할 수 있으며 컨테이너가 부모를 넘지 않도록
        조절할 수도 있는 플렉시블 레이아웃이 유행

        => 수직 수평하기 쉽게 자식 요소를 유연하게(내맘대로) 배치하는 플렉시블 레이아웃 유행

        ex)

        diplay: flex

        *

        flex-wrap : 플렉스 라인(부모)에 더이상 여유 공간이 없을 때 그 이후 속성을 다음 줄에 표시[줄바꿈]
        junstify-content: 플렉스 요소의 수평방향 정렬 방식
        alin-items : 플렉스 요소의 수직방향 정렬 방식 
        flex-direction : 정렬 방향 (수직, 수평)

        부가기능 (flex-grow, flex-shrink)


 id 선택자 => "#"
 class 선택자 => "."

 가족 선택자 ">" 자식 선택자
            " " 자손 선택자

 --------------------------------------------------------

 * 속성 선택자

    속성(properties)?
        <div id="seongyong"></div>
        // src, href, type, name, for ...

        [속성명] {
            CSS 문법 ----> 해당 속성을 가지고 있는 요소(태그)
        }

        [속성명 = '속성값'] {
            CSS 문법
        }


        ex)
            [href] {
                color: red;
            }

            [href = "https://wwww.naver.com"] {
                color: blue;
            }

            [type="text"] {
                color: blue;
            }

            .loginForm[type="text"] {
                background-color: red;
            }

            * 속성 선택자 심화

                [속성명 = "속성값"] -> 값이 완벽 일치 경우
                [속성명 ~= "속성값"] -> 값이 속성값과 다른 값이 띄어쓰기로 구성
                ex) name="apple banana"

                [속성명 *= "속성값"] -> 속성값이 포함된
                ex) name="bbapplecc""

                [속성명 $= "속성값"] -> 속성값이 접미사로 끝나는 요소를 선택
                ex) name="~apple"

                [속성명 ^= "속성값"] -> 속성값이 접두사로 시작하는 요소를 선택
                ex) name="apple~"

                [속서명 |= "속성값"] -> 속성값이 완벽 일치, 접두사로 존재하는 '-'으로 연결된 요소
                ex) name = "apple"
                    name = "apple-~"


                * key pint = [] 안에 있으면 속성과 관련된 선택자


 * 가상 클래스 선택자
                -클래스를 추가 할 필요 없이 요소(태그) 중에서 순서에 따라 원하는 특정 요소를 선택
                스타일을 지정

                ex) 

                <ul>    
                    <li></li>
                    <li></li> ----- 두번째 li를 선택
                    <li></li>
                </ul>

                
                ul > li:nth-child(2) {
                    ... CSS 문법
                }

                :first-child ---> 첫번째 자식에 해당하는 요소
                :last-child ---> 마지막 자식에 해당하는 요소
                :nth-child(n) --> n번째 자식에 해당하는 요소
                :nth-child(odd) --> 홀수번 째에 해당하는 요소
                :nth-child(even) --> 짝수번 째에 해당하는 요소
                :nth-child(2n-1) ---> 일정한 규칙에 해당하는 요소
                (n은 자연수)

 --------------------------------------------------------


 * 가상 요소 선택자

       선택자::before
       선택자::after
                해당 요소의 뒤 혹은 앞에 가상의 태그를 만들어냄

       ex) [name="signup"]::after {
            content: " | "
       }


        ex) 로그인 | 회원가입

 --------------------------------------------------------


  *  자주 사용하는 가상 선택자

    :link --> 하이퍼 링크가 연결되었을 때
    :visited -> 하이퍼 링크를 방문한 적이 있을 때

    :active --> 마우스(커서)가 해당 요소를 클릭하고 있을 때
    :hover ---> 마우스(커서)가 해당 요소에 위치하고 있을 때

    :focus ---> 입력 태그를 클릭해서 활성화 되었을 때
    ::placeholder --> placeholder의 css 속성을 제어할 때

 --------------------------------------------------------

    CSS 속성에 관한 이야기

    color의 표현법

        1. 색상 이름으로 표현
            red, white, black ...

        2. RGB 색상 값으로 표현
           (0~255)

          rgb(0~255, 0~255, 0~255)
          rgba(0~255, 0~255, 0~255, 0~1)

        3. 16진수 색상값으로 표현 

           16진수 (00~FF)

           "#6자리"
           ex)     r   g  b
           color: #00/00/00
                  #ffffff

            ex) #0000ff [파랑색]
                #ff0000 [빨간색]
                #ffffff [하얀색]
                #000000 [검정색]

-------------------------------------------------------------------------------

    Text 관련 CSS 속성

       ** color: 텍스트 색상

       letter-spacing : 글자(문자) 단위 사이 간격

       word-spacing : 단어 사이 간격

       ** text-align : 텍스트 정렬 (left, right, center)

       ** line-height : 텍스트와 텍스트 사이 간격 (행간)

       text-indent : 첫 줄의 들여쓰기

       * text-decoration : 텍스트에 여러가지 효과를 설정하거나 제거

       text-transform : 텍스트에 포함된 영문자에 대해 대소문자를 결정

       font-variant : 소문자를 더 작은 크기의 대문자로 변환

       * text-shadow : 텍스트의 그림자 번짐효과 등을 결정

       * white-space : 띄어쓰기와 들여쓰기, 줄바꿈 등을 어떻게 처리할지 결정

       * text-overflow : 텍스트가 기준을 벗어난 경우 어떻게 처리할지 결정

       ** font-size : 텍스트의 크기 설정

       ** font-weight: 텍스트의 굵기 설정 

       ** font-family: 텍스트의 글꼴 설정

 -------------------------------------------------------------------------------------------------

    * css, html이 어떻게 화면에 보여지는지 (파싱 과정) - CS
    * 배경

 -------------------------------------------------------------------------------------------------

   